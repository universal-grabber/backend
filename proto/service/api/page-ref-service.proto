syntax = 'proto3';

import "base/page-ref-status.proto";
import "base/page-ref-state.proto";
import "base/page-ref.proto";
import "base/empty.proto";

option go_package = "backend/gen/proto/service/api";

message PageRefSearchRequest {
  repeated string        websiteName = 1;
  repeated PageRefState  state       = 2;
  repeated PageRefStatus status      = 3;
  repeated string        tags        = 4;

  int32                  pageSize    = 5;
  int32                  page        = 6;
}

message PageRefFetchRequest {
  int32           bufferSize = 1;
  PageRefState    state      = 2;
  repeated string websites   = 3;
}

message PageRefSearchResult {
  repeated PageRef data      = 1;
  int32            totalSize = 2;
}

message PageRefList {
  repeated PageRef list = 1;
}

service PageRefService {
  rpc search (PageRefSearchRequest) returns (PageRefSearchResult);

  rpc fetch (PageRefFetchRequest) returns (stream PageRef);

  rpc complete (PageRefList) returns (Empty);

  rpc create (PageRefList) returns (Empty);
}